/* * * * * * * * * * * * * * * * * * * * * * * *        
 *  DEV PROGRESS : UPDATES_BY_WONO
 *                                                                  *
 *      last modified:  2014/06/26                                  *
 *      first wrote:    2014/06/14                                  *
 *                                                                  *
 *      wono (wonho lim: wono@live.com)                             *
 *                                                                  *
 * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * **/

Dev progress by wono will be logged within this file.


2014/06/26
==========
-   An external library - 'WXMLParser.java' is added at 
    'src/libraries/' directory. 


2014/06/25
==========
-   Module 'controllers' and 'skills' are modified to provide more 
    flexible mapping between keys and skills. For the module 
    'controllers', a new class - 'Key' is added. For the module 
    'skills', a new file 'SMapDrive' is added. The SMapDrive is new 
    driver class to map skills with keys and it will replace 
    'SkillMapper' class soon. The 'Skill' class is modified to 
    interect with the 'SmapDrive' class. Test module is also updated 
    to test it, and a test file - 'TestSMapDriver.java' is added.


2014/06/24
==========
-   The module - 'skills' is updated. Now the SkillMapper class 
    smoothly interects with the Skill family classes. SkillPHD.java
    file is added there. Test module is also updated to test the 
    interection between SkillMapper and Skill family classes. To test 
    this use 'make skills' command at the root directory.


2014/06/23
==========
-   Skill.java and SkillMapper.java are added at 'skills'. SkillMapper 
    is a core program helping to map each skill type with a key set 
    respectfully. Constants representing numeric keys are added onto 
    the interface - 'skills/interfaces/CtrlKeyIndex.java'.


2014/06/22
==========
-   An interface - 'controllers/interface/CtrKeyIndex.java' is added. 
    All the keys to proceed user input, that is charater, will be 
    written here.

-   Interface - 'controllers.interfaces.CtrlKeyIndex.java' is 
    implemented into all controllers - 'AttackOrRun.java' and 
    'Direction.java. Minor issues are fixed at this interface to be 
    implemented properly.


2014/06/21 
========== 
-   A test file - 'tests/TestSkills.java' is added. Test module is
    updated to run this test file. 

-   A new module - 'skills' is added. It has categorized skill sets - 
    phisical attacks, offensive buffers, and defensive buffers (will 
    be added soon) with their few skills (methods) and interfaces - 
    names, effects.


2014/06/20
==========
-   Makefile and tests/runtests files are modified. Now all the source 
    files for testing are compiled in 'bin/' directory.

-   All test files are modified - better formats, fixed minor issues.


2014/06/19
==========
-   A test file - tests/TestController.java is added.

-   A set of commands for testing a module with 
    'tests/TestControllers.java' is added into Makefile.

-   A file - 'Direction.java' is added into controllers module. 
    Function to test this controller is added into 
    'tests/TestControllers.java'.


2014/06/18
==========
-   A module - controllers is added. All the user-input controlling 
    mechanisms will be featured at there. Currently attack and run 
    features are available. 

-   A bash script - 'tests/runtests' is added to reduce code 
    redendencty at Makefile. Now Makefile calls 'tests/runtests' 
    script to compile and run each test. Features to log result and 
    error of each test and to view its log file at 'tests/logs/' are 
    added. A file - 'tests/README' is updated. 


2014/06/16
==========
-   A file src/hero/Hero.java is re-written. Singletone design pattern 
    is applied to avoid multiple invoking of Hero instance. A test 
    file - tests/TestHero.java is added, and Makefile is updated to 
    run this test file. 


2014/06/15 
========== 
-   Several file/directory organizations are changed. Minor change is 
    changed.
    
-   The main README file is updated.


2014/06/14
==========
-   A module - error_handlers is added. Errors of every modules may be
    handled with this module. 'monsters/OUTLINE' is updated. Test 
    script for testing 'error_handlers' module is added into 'tests' 
    module.  

-   The previous error handling mechanism for monsters/MTDescription 
    is replaced with new one - handling errors by 'error_handlers' 
    module. An issue that has possible to redendantly call 
    MTDescription.GET() method from describe() of Monster class is 
    fixed for better performance. A member variable of Monster class 
    holds a description from MTDescription.GET() method now. Related 
    few minor issues are updated.


2014/06/13
==========
-   Miner fixes at lgdofslnc/tests/TestMonsters.java - unnecessary 
    redundancies are erased for better performance. 


2014/06/12
==========
    -   Recovered broken format of previous merging with 
        origin/master.
    -   Finalized src name package issue. Root package is NO LONGER 
        src. Every package name begins its own directory name within 
        'src/' as their root name. 
    -   Updated monsters/OUTLINE. 
    -   MTDescriptionInterface is added. All descriptions of monsters 
        are moved to there.
    -   Interface name MonsterIndex is replaced to MTIndexInterface. 
        Its index name is also changed. Now all  monster index names 
        begin with MTI_ instead of MI_.  
    -   MTDescription class is added. Now describe() method of Monster 
        class refers this class to print a monster description. A file
        los_error_numbers.ref is added at lgndofslnc/reference/ 
        directory to log all the error numbers of LoS within there. 
    -   MTD_ERROR_MESSAGE constant is added into 
        MTDescriptionInterface.
    -   Test module is upgraded. Several minor issues are fixed.

2014/06/10
==========
    -   Randomizing Monster instance generation features are added 
        into monsters module.

2014/06/09
========== 
    -   Organized file structures and their relation ship ons of 
        monsters module.

2014/06/08
==========
    -   Start Project. A rough version of monsters module is designed.

